# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
    tags: ['**']

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: ./gradlew build
      - name: version type
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v7
        id: version-type
        with:
          script: |
            const version = '${{ github.ref_name }}';
            const isPrerelease = version.startsWith('0.') || version.split('-').length > 1;
            if (!isPrerelease) {
              return 'release';
            }
            if (version.startsWith('0.')) {
              return 'alpha';
            }
            const prerelease = version.split('-')[1];
            if (prerelease.split('.')[0] === 'alpha') {
              return 'alpha';
            }
            return 'beta';
      - name: build
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew modrinth -Pmod_version=${{ github.ref_name }} -Pmod_version_type=${{ steps.version-type.outputs.result }}
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
